{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../button/button.component\";\nfunction TasksComponent_tbody_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementStart(6, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TasksComponent_tbody_18_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const idx_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeTask(idx_r2));\n    });\n    i0.ɵɵtext(7, \"X\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const list_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", list_r1.description, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", list_r1.Status, \" \");\n  }\n}\n//import { ButtonComponent } from '../../button/button.component';\nexport class TasksComponent {\n  constructor() {\n    this.taskList = [];\n    this.taskStatus = true;\n    this.addNewTask = event => {\n      if (this.taskStatus == true) {\n        this.Status = 'Active';\n      }\n      this.taskList.push({\n        description: this.description,\n        Status: this.Status\n      });\n    };\n    this.removeTask = idx => {\n      this.taskList.splice(idx, 1);\n    };\n  }\n  ngOnInit() {}\n}\nTasksComponent.ɵfac = function TasksComponent_Factory(t) {\n  return new (t || TasksComponent)();\n};\nTasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TasksComponent,\n  selectors: [[\"app-tasks\"]],\n  inputs: {\n    description: \"description\"\n  },\n  decls: 19,\n  vars: 2,\n  consts: [[\"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\", \"rel\", \"stylesheet\", \"integrity\", \"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\", \"crossorigin\", \"anonymous\"], [1, \"m-1\", \"p-1\"], [1, \"bg-primary\", \"text-white\", \"p-3\"], [1, \"my-1\"], [1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"taskAdded\"], [1, \"table\", \"table-striped\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [\"margin\", \"10px 2px\", \"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function TasksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \"TODO\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"link\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"body\", 1)(6, \"h3\", 2);\n      i0.ɵɵtext(7, \"Sunand's TODO List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function TasksComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"app-button\", 5);\n      i0.ɵɵlistener(\"taskAdded\", function TasksComponent_Template_app_button_taskAdded_10_listener($event) {\n        return ctx.addNewTask($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"table\", 6)(12, \"thead\")(13, \"tr\")(14, \"th\");\n      i0.ɵɵtext(15, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Status\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(18, TasksComponent_tbody_18_Template, 8, 2, \"tbody\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.description);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.taskList);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.ButtonComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAqBaA,6BAAqD;IACzCA,YAAoB;IAAAA,iBAAK;IAAAA,0BAAI;IAAAA,YAAgB;IAAAA,iCAAyF;IAA1BA;MAAA;MAAA;MAAA;MAAA,OAASA,wCAAe;IAAA,EAAC;IAACA,iBAAC;IAAAA,iBAAS;;;;IAAhJA,eAAoB;IAApBA,mDAAoB;IAASA,eAAgB;IAAhBA,8CAAgB;;;ACrBtE;AAOA,OAAM,MAAOC,cAAc;EAEzBC;IAIA,aAAQ,GAAE,EAAE;IAKX,eAAU,GAAS,IAAI;IAGxB,eAAU,GAAGC,KAAa,IAAG;MAC3B,IAAG,IAAI,CAACC,UAAU,IAAE,IAAI,EAAC;QACzB,IAAI,CAACC,MAAM,GAAC,QAAQ;;MAEpB,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;QACjBC,WAAW,EAAC,IAAI,CAACA,WAAW;QAC5BH,MAAM,EAAC,IAAI,CAACA;OAAO,CAAC;IAExB,CAAC;IACD,eAAU,GAAEI,GAAG,IAAG;MAChB,IAAI,CAACH,QAAQ,CAACI,MAAM,CAACD,GAAG,EAAC,CAAC,CAAC;IAE7B,CAAC;EAxBe;EAEhBE,QAAQ,IACR;;AALWV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAW;EAAAC;IAAAL;EAAA;EAAAM;EAAAC;EAAAC;EAAAC;IAAA;MDP3BjB,4BAAM;MAESA,oBAAI;MAAAA,iBAAQ;MACpBA,0BAEwB;MAC3BA,iBAAO;MACPA,+BAAsB;MACqBA,kCAAkB;MAAAA,iBAAK;MAC9DA,8BAAkB;MACcA;QAAA;MAAA,EAAyB;MAArDA,iBAAsD;MACtDA,sCAA6C;MAAjCA;QAAA,OAAakB,sBAAkB;MAAA,EAAC;MAAClB,iBAAa;MAE9DA,iCAAmD;MAGnCA,4BAAW;MAAAA,iBAAK;MACpBA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAGtBA,qEAEQ;MACbA,iBAAQ;;;MAbwBA,eAAyB;MAAzBA,yCAAyB;MAU5BA,eAAa;MAAbA,sCAAa","names":["i0","TasksComponent","constructor","event","taskStatus","Status","taskList","push","description","idx","splice","ngOnInit","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\thamb\\DOCS\\PRACTISE\\ANGULAR\\practiseAng\\src\\app\\components\\tasks\\tasks\\tasks.component.html","C:\\Users\\thamb\\DOCS\\PRACTISE\\ANGULAR\\practiseAng\\src\\app\\components\\tasks\\tasks\\tasks.component.ts"],"sourcesContent":["<!DOCTYPE html>\n<html>\n    <head>\n        <title>TODO</title>\n       <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\" \n       rel=\"stylesheet\" integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" \n       crossorigin=\"anonymous\">\n    </head>\n    <body class=\"m-1 p-1\">\n        <h3 class =\"bg-primary text-white p-3\">Sunand's TODO List</h3>\n        <div class=\"my-1\">\n            <input class=\"form-control\" [(ngModel)]=\"description\">\n            <app-button (taskAdded)=\"addNewTask($event)\"></app-button>\n        </div>\n        <table class =\"table table-striped table-bordered\">\n            <thead>\n                <tr>\n                    <th>Description</th>\n                    <th>Status</th>\n                </tr>\n                </thead>\n             <tbody *ngFor=\"let list of taskList; let idx =index\">\n                <tr><td> {{list.description}}</td><td>{{list.Status}} <button margin='10px 2px' type=\"button\" class=\"btn btn-danger\" (click)=\"removeTask(idx)\">X</button></td></tr>\n             </tbody>    \n        </table>   \n       </body>     \n</html>","import { Component, Input, OnInit, Output } from '@angular/core';\n//import { ButtonComponent } from '../../button/button.component';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  taskList =[];\n  \n  \n  \n  @Input() description:string;\n   taskStatus:boolean=true;\n   Status:string;\n  \n  addNewTask =(event: string)=>{\n    if(this.taskStatus==true){\n    this.Status='Active' ;\n    }\n    this.taskList.push({\n      description:this.description,\n      Status:this.Status})\n    \n  }\n  removeTask=(idx)=> {\n    this.taskList.splice(idx,1);\n    \n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}